updated_data <- project_data
# Changing all foreign employee residence to "Offshore"
updated_data$company_location[updated_data$employee_residence!="US"] <- "Offshore"
# Changing all foreign company location to "Offshore"
updated_data$company_location[updated_data$company_location!="US"] <- "Offshore"
# Remove all observations that are part-time
updated_data <- updated_data[updated_data$employment_type == "FT", ]
# Salary by company location for senior level data scietnists at small and medium sized companies
senior_level <-
updated_data %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(comapny_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
# Salary by company size for offshore data scientists working for US companies
salary_size_offshore <-
updated_data %>%
filter(experience_level == "SE", company_size != "L", employee_residence == "Offshore", company_location == "US") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
# Salary by company size for all US data scientists
salary_size_us <-
updated_data %>%
filter(experience_level == "SE", company_size != "L", employee_residence == "US") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
# Median salary by remote ratio for US data scientists
salary_remote <-
updated_data %>%
filter(experience_level == "SE", company_size != "L", employee_residence == "US") %>%
group_by(remote_ratio) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
# Median salary by year
salary_year <-
updated_data %>%
select(!c("employment_type", "job_title", "salary", "salary_currency")) %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(remote_ratio) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(updated_data)
View(senior_level)
senior_level <-
updated_data %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(senior_level)
View(salary_size_offshore)
salary_size_offshore <-
updated_data %>%
filter(experience_level == "SE", company_size != "L", employee_residence == "Offshore") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(salary_size_offshore)
View(senior_level)
senior_level <-
updated_data %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(company_location, employee_residence) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(senior_level)
View(updated_data)
salary_year <-
updated_data %>%
select(!c("employment_type", "job_title", "salary", "salary_currency")) %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(year, comapny_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
salary_year <-
updated_data %>%
select(!c("employment_type", "job_title", "salary", "salary_currency")) %>%
filter(experience_level == "SE", company_size != "L") %>%
group_by(work_year, company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(salary_year)
?grep1
managers <-
updated_data %>%
filter(grep1("manager|lead", job_title, ignore.case = T), experience_level == "SE", company_size != "L") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
managers <-
updated_data %>%
filter(grepl("manager|lead", job_title, ignore.case = T), experience_level == "SE", company_size != "L") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(managers)
View(project_data)
executive_level <-
updated_data %>%
filter(experience_level == "EX", company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(executive_level)
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX"), company_size != "L") %>%
group_by(experience_level, company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
project_data <- read.csv("R Project/r_project_data.csv")
View(project_data)
updated_data <- project_data
# Changing all foreign employee residence to "Offshore"
updated_data$company_location[updated_data$employee_residence!="US"] <- "Offshore"
# Changing all foreign company location to "Offshore"
updated_data$company_location[updated_data$company_location!="US"] <- "Offshore"
# Remove all observations that are part-time
updated_data <- updated_data[updated_data$employment_type == "FT", ]
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX"), company_size != "L") %>%
group_by(company_size, experience_level) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX"), company_size != "L") %>%
group_by(company_size, experience_level)
View(experience_data)
View(updated_data)
median(c(69741, 118187))
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX"), company_size != "L")
View(experience_data)
?filter
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX"), company_size == c("S", "M"))
experience_data <-
updated_data %>%
filter(experience_level == c("SE", "EX") & company_size != "L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
# Load libraries
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
library(scales)
# Import project data
project_data <- read.csv("R Project/r_project_data.csv")
updated_data <- project_data
# Changing all foreign employee residence to "Offshore"
updated_data$company_location[updated_data$employee_residence!="US"] <- "Offshore"
# Changing all foreign company location to "Offshore"
updated_data$company_location[updated_data$company_location!="US"] <- "Offshore"
# Remove all observations that are part-time
updated_data <- updated_data[updated_data$employment_type == "FT", ]
# Median salary by company location for senior level data scientists at small and medium sized companies
senior_level <-
updated_data %>%
filter(experience_level == "SE" & company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
executive_level <-
updated_data %>%
filter(experience_level == "EX" & company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
experience_data <-
updated_data %>%
filter(experience_level==c("SE", "EX") & company_size!="L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(executive_level)
View(experience_data)
experience_data <-
updated_data %>%
filter(experience_level==c("SE", "EX") & company_size == "S")  %>%
group_by(experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
project_data <- as.data.frame(read.csv("R Project/r_project_data.csv"))
experience_data <-
updated_data %>%
filter(experience_level==c("SE", "EX") & company_size == "S")  %>%
group_by(experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(executive_level)
View(experience_data)
View(project_data)
?read.csv
View(updated_data)
executive_level <-
updated_data %>%
filter(experience_level == "EX" & company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(executive_level)
executive_level <-
updated_data %>%
filter(experience_level == "EX" & company_size != "L") %>%
group_by(company_size) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(executive_level)
executive_level <-
updated_data %>%
filter(experience_level == "EX" & company_size != "L") %>%
group_by(company_location) %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
experience_data <-
updated_data %>%
filter(experience_level %in% c("SE", "EX") & company_size != "L")  %>%
group_by(experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
View(experience_data)
experience_data <-
updated_data %>%
filter(experience_level %in% c("SE", "EX") & company_size != "L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
View(experience_data)
experience_data <-
updated_data %>%
filter(experience_level %in% c("SE", "EX") & company_size != "L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n()) %>%
filter(n > 10) %>%
ggplot(
mapping = aes(x=experience_level,y=median_salary_usd, fill="company_size")
) +
geom_col(position = "dodge") +
labs(x='Experience Level',
y='Median Salary (USD)',
title='Global Salaries for Senior to Executive level Data Scientists') +
scale_y_continuous(labels = scales::dollar_format())
View(experience_data)
experience_data <-
updated_data %>%
filter(experience_level %in% c("SE", "EX") & company_size != "L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n()) %>%
filter(n > 10)
View(experience_data)
experience_data %>%
ggplot(
mapping = aes(x=experience_level,y=median_salary_usd, fill="company_size")
) +
geom_col(position = "dodge") +
labs(x='Experience Level',
y='Median Salary (USD)',
title='Global Salaries for Senior to Executive level Data Scientists') +
scale_y_continuous(labels = scales::dollar_format())
experience_data <-
updated_data %>%
filter(experience_level %in% c("SE", "EX") & company_size != "L")  %>%
group_by(company_size, experience_level)  %>%
summarise(median_salary_usd = median(salary_in_usd), n = n())
experience_data %>%
ggplot(
mapping = aes(x=experience_level,y=median_salary_usd, fill="company_size")
) +
geom_col(position = "dodge") +
labs(x='Experience Level',
y='Median Salary (USD)',
title='Global Salaries for Senior to Executive level Data Scientists') +
scale_y_continuous(labels = scales::dollar_format())
experience_data %>%
ggplot(
mapping = aes(x=experience_level,y=median_salary_usd, fill="company_size")
) +
geom_col() +
labs(x='Experience Level',
y='Median Salary (USD)',
title='Global Salaries for Senior to Executive level Data Scientists') +
scale_y_continuous(labels = scales::dollar_format())
install.packages("C:/Users/janna/Documents/Merrimack MSDS/DSE6111/ISLR2_1.3-2.tar.gz", repos = NULL, type = "source")
getwd()
setwd(C:\Users\janna\Documents\Merrimack MSDS\DSE6111\Week 1)
setwd(C:/Users/janna/Documents/Merrimack MSDS/DSE6111/Week 1)
setwd("C:/Users/janna/Documents/Merrimack MSDS/DSE6111/Week 1")
# Load library
library(ISLR2)
# Question 8a: Import data set
college <- read.csv("College.csv")
# Question 8b: Row Names
rownames(college) <- college[, 1]
View(college)
college <- college[, -1]
View(college)
# Part i
summary(college)
?pairs()
#Part ii
pairs(college[, 1:10])
#Part ii
pairs(college[, 2:11])
?plot()
?boxplot()
#Part iii
df_iii <- college[,c("Private", "Outstate")]
boxplot(df_iii, main = "boxplots of Private and Outstate")
View(df_iii)
#Part iii
boxplot(college$Outstate ~ college$Private, main = "Boxplot of Out-of-State Tuition by Private status")
View(df_iii)
Elite <- rep("No", nrow(college))
Elite[college$Top10perc > 50] <- "Yes"
Elite <- as.factor(Elite)
college <- data.frame(college, Elite)
summary(college)
boxplot(college$Outstate ~ college$Elite, main = "Boxplot of Out-of-State Tuition by Elite status")
?hist()
?par()
par(mfrow = c(2,2))
hist(college$Expend)
hist(college$Terminal)
hist(college$S.F.Ratio)
hist(college$perc.alumni)
par(mfrow = c(2,2))
hist(college$Expend)
hist(college$Expend, breaks = 5)
hist(college$Expend, breaks = 10)
hist(college$Expend, breaks = 15)
par(mfrow = c(2,2))
hist(college$Expend)
hist(college$Expend, breaks = 5)
hist(college$Expend, breaks = 20)
hist(college$Expend, breaks = 100)
?drop_na()
auto <- read.csv("Auto.csv", na.strings = "?", stringsAsFactors = T)
auto <- na.omit(auto)
str(auto)
View(auto)
?range()
# QUESTION 9b
range(auto[-c('cylinders', 'year', 'name', 'origin')])
# QUESTION 9b
range(auto[,-c('cylinders', 'year', 'name', 'origin')])
# QUESTION 9b
auto[, c('year')]
# QUESTION 9b
subset_test <- auto[, -c('year')]
# QUESTION 9b
range(auto[, c('mpg', 'displacement', 'horsepower', 'weight', 'acceleration')])
for (x in c('mpg', 'displacement', 'horsepower', 'weight', 'acceleration')) {
range(auto[, x])
}
for (x in c('mpg', 'displacement', 'horsepower', 'weight', 'acceleration')) {
print(range(auto[, x]))
}
# QUESTION 9c
sapply(auto[, quantitative_auto], function(x) c("Mean:" = mean(x, na.rm = T), "Std Dev:" = sd(x)))
# QUESTION 9b
quantitative_auto = c('mpg', 'displacement', 'horsepower', 'weight', 'acceleration')
# QUESTION 9c
sapply(auto[, quantitative_auto], function(x) c("Mean:" = mean(x, na.rm = T), "Std Dev:" = sd(x)))
# QUESTION 9d
rmv_auto <- auto[-10:85,]
# QUESTION 9d
rmv_auto <- auto[-c(10:85),]
sapply(rmv_auto, function(x) c("Mean:" = mean(x, na.rm = T),
"Std Dev:" = sd(x),
"Range" = range(x))
)
sapply(rmv_auto[,quantitative_auto], function(x) c("Mean:" = mean(x, na.rm = T),
"Std Dev:" = sd(x),
"Range" = range(x))
)
#QUESTION 9e
pairs(auto[,quantitative_auto])
for (x in c('displacement', 'horsepower', 'weight', 'acceleration')) {
print(paste("Correlation coeff between mpg and ", x, "is ", cor(auto[x], auto$mpg)))
}
# QUESTION 10a
dim(Boston)
View(Boston)
?Boston
# QUESTION 10b
pairs(Boston)
# QUESTION 10b
pairs(Boston[,-4])
for (x in c('lstat', 'medv')) {
print(paste("Correlation coeff between crim and ",x, "is ", cor(Boston[x], Boston$crim)))
}
?count()
?nrow()
for (x in c('crim', 'tax', 'ptratio')) {
print(range(Boston[, x]))
}
# QUESTION 10e
nrow(Boston[Boston$chas == 1])
# QUESTION 10e
nrow(Boston[Boston['chas'] == 1])
# QUESTION 10e
Boston[Boston$chas == 1]
# QUESTION 10e
Boston[Boston['chas'] == 1]
?nrow()
# QUESTION 10e
nrow(Boston[Boston['chas'] == 1])
nrow(Boston)
# QUESTION 10e
charles <- Boston[Boston['chas'] == 1]
# QUESTION 10e
charles <- data.frame(Boston[Boston['chas'] == 1])
View(charles)
# QUESTION 10e
boston <- Boston
nrow(boston[boston$chas == 1])
View(boston)
nrow(boston[boston[4] == 1])
# QUESTION 10e
length(which(Boston['chas'] == 1))
# QUESTION 10f
median(Boston['ptratio'])
is.numeric(Boston['ptratio'])
class(Boston['ptratio'])
# QUESTION 10f
median(as.vector(Boston['ptratio']))
# QUESTION 10f
median(as.numeric(Boston['ptratio']))
?which()
# QUESTION 10f
boston <- data.frame(Boston)
median(boston$ptratio)
?which.min
# QUESTION 10g
which.min(boston$medv)
boston[min_med,]
# QUESTION 10g
min_med <- which.min(boston$medv)
boston[min_med,]
min_med_df <- boston[min_med,]
View(min_med_df)
for (x in colnames(boston)) {
print(range(boston[, x]))
}
for (x in c('crim', 'tax', 'ptratio')) {
print(median(boston[x]))
}
boston <- data.frame(Boston)
for (x in c('crim', 'tax', 'ptratio')) {
print(median(boston[x]))
}
for (x in c('crim', 'tax', 'ptratio')) {
print(boston[x])
}
for (x in c('crim', 'tax', 'ptratio')) {
print(boston$x)
}
for (x in c('crim', 'tax', 'ptratio')) {
print(range(Boston[, x]))
}
print(median(boston$crim))
print(median(boston$tax))
print(median(boston$ptratio))
for (x in quantitative_auto) {
print(paste("The range of ",x, " is ", range(auto[, x])))
}
for (x in quantitative_auto) {
print(range(auto[, x]))
}
for (x in quantitative_auto) {
print(paste("the range is: ", range(auto[, x])))
}
for (x in c('displacement', 'horsepower', 'weight', 'acceleration')) {
print(paste("Correlation coeff between mpg and ",x, "is ", cor(auto[x], auto$mpg)))
}
?plot()
for (predictor in c('displacement', 'horsepower', 'weight', 'acceleration')) {
attach(auto)
plot(x=predictor, y=mpg)
print(paste("Correlation coeff between mpg and ",x, "is ", cor(auto[x], auto$mpg)))
}
attach(auto)
plot(displacement, mpg)
dim(Boston)
View(Boston)
?Boston
for (x in c('lstat', 'medv')) {
print(paste("Correlation coeff between crim and ",x, "is ", cor(Boston[x], Boston$crim)))
}
boston <- data.frame(Boston)
for (x in c('crim', 'tax', 'ptratio')) {
print(range(Boston[, x]))
}
print(median(boston$crim))
print(median(boston$tax))
print(median(boston$ptratio))
length(which(Boston['chas'] == 1))
length(which(boston$chas == 1))
median(boston$ptratio)
min_med <- which.min(boston$medv)
print(min_med)
min_med_df <- boston[min_med,]
View(min_med_df)
for (x in colnames(boston)) {
print(range(boston[, x]))
}
length(which(boston$rm > 7))
length(which(boston$rm > 8))
summary(boston[boston$rm > 8])
length(which(boston$rm > 7))
length(which(boston$rm > 8))
summary(boston[boston$rm > 8])
eight_rm <- boston[boston$rm > 8]
eight_rm <- boston[boston$rm > 8,]
View(eight_rm)
summary(boston[boston$rm > 8,])
summary(boston)
summary(college)
college$Acc.Rate <- college$Accept / college$Apps
View(college)
View(college)
# Part vi
boxplot(college$Expend ~ college$Elite, main = "Boxplot of Instructional Expenditure by Elite status")
boxplot(college$S.F.Ratio ~ college$Elite, main = "Boxplot of Student/Faculty Ratio Expenditure by Elite status")
boxplot(college$Acc.Rate ~ college$Elite, main = "Acceptance Rate by Elite Status")
